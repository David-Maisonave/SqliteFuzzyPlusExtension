select Words
, Similar(Words, 'David', 'UseDefaultStringMatchingAlgorithm') as a0 -- UseDefaultStringMatchingAlgorithm (ID# 0)
, Similar(Words, 'David', 'Levenshtein') as a1 -- Levenshtein (ID# 1)
, Similar(Words, 'David', 'DamerauLevenshtein') as a2 -- DamerauLevenshtein (ID# 2)
, Similar(Words, 'David', 'JaroWinkler') as a3 -- JaroWinkler (ID# 3)
, Similar(Words, 'David', 'HammingDistance') as a4 -- HammingDistance (ID# 4)
, Similar(Words, 'David', 'JaroDistance') as a5 -- JaroDistance (ID# 5)
, Similar(Words, 'David', 'NormalizedLevenshteinDistance') as a6 -- NormalizedLevenshteinDistance (ID# 6)
, Similar(Words, 'David', 'Levenshtein2Distance') as a7 -- Levenshtein2Distance (ID# 7)
, Similar(Words, 'David', 'ChapmanLengthDeviation') as a8 -- ChapmanLengthDeviation (ID# 8)
, Similar(Words, 'David', 'EuclideanDistance') as a9 -- EuclideanDistance (ID# 9)
, Similar(Words, 'David', 'LongestCommonSequence') as a32 -- LongestCommonSequence (ID# 32)
, Similar(Words, 'David', 'NeedlemanWunsch') as a33 -- NeedlemanWunsch (ID# 33)
, Similar(Words, 'David', 'RatcliffObershelpSimilarityDistance') as a34 -- RatcliffObershelpSimilarityDistance (ID# 34)
, Similar(Words, 'David', 'LongestCommonSubstringDistance') as a35 -- LongestCommonSubstringDistance (ID# 35)
, Similar(Words, 'David', 'LongestCommonSubsequenceDistance') as a36 -- LongestCommonSubsequenceDistance (ID# 36)
, Similar(Words, 'David', 'SmithWaterman') as a37 -- SmithWaterman (ID# 37)
, Similar(Words, 'David', 'SmithWatermanGotoh') as a38 -- SmithWatermanGotoh (ID# 38)
, Similar(Words, 'David', 'SmithWatermanGotohWindowedAffine') as a39 -- SmithWatermanGotohWindowedAffine (ID# 39)
, Similar(Words, 'David', 'CosineSimilarity') as a64 -- CosineSimilarity (ID# 64)
, Similar(Words, 'David', 'JaccardSimilarity') as a65 -- JaccardSimilarity (ID# 65)
, Similar(Words, 'David', 'JaccardIndex') as a66 -- JaccardIndex (ID# 66)
, Similar(Words, 'David', 'TanimotoCoefficientDistance') as a67 -- TanimotoCoefficientDistance (ID# 67)
, Similar(Words, 'David', 'OverlapCoefficient') as a68 -- OverlapCoefficient (ID# 68)
, Similar(Words, 'David', 'SorensenDiceDistance') as a69 -- SorensenDiceDistance (ID# 69)
, Similar(Words, 'David', 'DiceSimilarity') as a70 -- DiceSimilarity (ID# 70)
, Similar(Words, 'David', 'BlockDistance') as a71 -- BlockDistance (ID# 71)
, Similar(Words, 'David', 'MatchingCoefficient') as a72 -- MatchingCoefficient (ID# 72)
, Similar(Words, 'David', 'QGramsDistance') as a73 -- QGramsDistance (ID# 73)
, Similar(Words, 'David', 'NGramsDistance') as a74 -- NGramsDistance (ID# 74)
, Similar(Words, 'David', 'TverskyIndex_DO_NOT_USE') as a75 -- TverskyIndex_DO_NOT_USE (ID# 75)
, Similar(Words, 'David', 'MongeElkan') as a76 -- MongeElkan (ID# 76)
, Similar(Words, 'David', 'Sift4') as a77 -- Sift4 (ID# 77)
, Similar(Words, 'David', 'GeneralizedCompressionDistance_DO_NOT_USE') as a78 -- GeneralizedCompressionDistance_DO_NOT_USE (ID# 78)
, Similar(Words, 'David', 'SimHash_DO_NOT_USE') as a79 -- SimHash_DO_NOT_USE (ID# 79)
, Similar(Words, 'David', 'MinHash_DO_NOT_USE') as a80 -- MinHash_DO_NOT_USE (ID# 80)
, Similar(Words, 'David', 'PhraseTokenize') as a96 -- PhraseTokenize (ID# 96)
, Similar(Words, 'David', 'SimplePhraseTokenize') as a97 -- SimplePhraseTokenize (ID# 97)
, Similar(Words, 'David', 'Fuzzy_Damlev') as a128 -- Fuzzy_Damlev (ID# 128)
, Similar(Words, 'David', 'Fuzzy_Hamming') as a129 -- Fuzzy_Hamming (ID# 129)
, Similar(Words, 'David', 'Fuzzy_Jarowin') as a130 -- Fuzzy_Jarowin (ID# 130)
, Similar(Words, 'David', 'Fuzzy_Leven') as a131 -- Fuzzy_Leven (ID# 131)
, Similar(Words, 'David', 'Fuzzy_Osadist') as a132 -- Fuzzy_Osadist (ID# 132)
, Similar(Words, 'David', 'Fuzzy_Editdist') as a133 -- Fuzzy_Editdist (ID# 133)
, Similar(Words, 'David', 'Fuzzy_Jaro') as a134 -- Fuzzy_Jaro (ID# 134)
, Similar(Words, 'David', 'EdlibDistance') as a135 -- EdlibDistance (ID# 135)
, Similar(Words, 'David', 'ChapmanMeanLength') as a224 -- ChapmanMeanLength (ID# 224)
, Similar(Words, 'David', 'EditDistance') as a234 -- EditDistance (ID# 234)
, Similar(Words, 'David', 'ExactMatch') as a255 -- ExactMatch (ID# 255)
, Similar(Words, 'David', 'iLevenshtein') as a257 -- iLevenshtein (ID# 257)
, Similar(Words, 'David', 'iDamerauLevenshtein') as a258 -- iDamerauLevenshtein (ID# 258)
, Similar(Words, 'David', 'iJaroWinkler') as a259 -- iJaroWinkler (ID# 259)
, Similar(Words, 'David', 'iHammingDistance') as a260 -- iHammingDistance (ID# 260)
, Similar(Words, 'David', 'iJaroDistance') as a261 -- iJaroDistance (ID# 261)
, Similar(Words, 'David', 'iNormalizedLevenshteinDistance') as a262 -- iNormalizedLevenshteinDistance (ID# 262)
, Similar(Words, 'David', 'iLevenshtein2Distance') as a263 -- iLevenshtein2Distance (ID# 263)
, Similar(Words, 'David', 'iChapmanLengthDeviation') as a264 -- iChapmanLengthDeviation (ID# 264)
, Similar(Words, 'David', 'iEuclideanDistance') as a265 -- iEuclideanDistance (ID# 265)
, Similar(Words, 'David', 'iLongestCommonSequence') as a288 -- iLongestCommonSequence (ID# 288)
, Similar(Words, 'David', 'iNeedlemanWunsch') as a289 -- iNeedlemanWunsch (ID# 289)
, Similar(Words, 'David', 'iRatcliffObershelpSimilarityDistance') as a290 -- iRatcliffObershelpSimilarityDistance (ID# 290)
, Similar(Words, 'David', 'iLongestCommonSubstringDistance') as a291 -- iLongestCommonSubstringDistance (ID# 291)
, Similar(Words, 'David', 'iLongestCommonSubsequenceDistance') as a292 -- iLongestCommonSubsequenceDistance (ID# 292)
, Similar(Words, 'David', 'iSmithWaterman') as a293 -- iSmithWaterman (ID# 293)
, Similar(Words, 'David', 'iSmithWatermanGotoh') as a294 -- iSmithWatermanGotoh (ID# 294)
, Similar(Words, 'David', 'iSmithWatermanGotohWindowedAffine') as a295 -- iSmithWatermanGotohWindowedAffine (ID# 295)
, Similar(Words, 'David', 'iCosineSimilarity') as a320 -- iCosineSimilarity (ID# 320)
, Similar(Words, 'David', 'iJaccardSimilarity') as a321 -- iJaccardSimilarity (ID# 321)
, Similar(Words, 'David', 'iJaccardIndex') as a322 -- iJaccardIndex (ID# 322)
, Similar(Words, 'David', 'iTanimotoCoefficientDistance') as a323 -- iTanimotoCoefficientDistance (ID# 323)
, Similar(Words, 'David', 'iOverlapCoefficient') as a324 -- iOverlapCoefficient (ID# 324)
, Similar(Words, 'David', 'iSorensenDiceDistance') as a325 -- iSorensenDiceDistance (ID# 325)
, Similar(Words, 'David', 'iDiceSimilarity') as a326 -- iDiceSimilarity (ID# 326)
, Similar(Words, 'David', 'iBlockDistance') as a327 -- iBlockDistance (ID# 327)
, Similar(Words, 'David', 'iMatchingCoefficient') as a328 -- iMatchingCoefficient (ID# 328)
, Similar(Words, 'David', 'iQGramsDistance') as a329 -- iQGramsDistance (ID# 329)
, Similar(Words, 'David', 'iNGramsDistance') as a330 -- iNGramsDistance (ID# 330)
, Similar(Words, 'David', 'iTverskyIndex_DO_NOT_USE') as a331 -- iTverskyIndex_DO_NOT_USE (ID# 331)
, Similar(Words, 'David', 'iMongeElkan') as a332 -- iMongeElkan (ID# 332)
, Similar(Words, 'David', 'iSift4') as a333 -- iSift4 (ID# 333)
, Similar(Words, 'David', 'iGeneralizedCompressionDistance_DO_NOT_USE') as a334 -- iGeneralizedCompressionDistance_DO_NOT_USE (ID# 334)
, Similar(Words, 'David', 'iSimHash_DO_NOT_USE') as a335 -- iSimHash_DO_NOT_USE (ID# 335)
, Similar(Words, 'David', 'iMinHash_DO_NOT_USE') as a336 -- iMinHash_DO_NOT_USE (ID# 336)
, Similar(Words, 'David', 'iChapmanMeanLength') as a480 -- iChapmanMeanLength (ID# 480)
FROM SimilarWords;
-- Note: Case insensitive functions have an ID number greater than 256
--       C++ functions have an ID number equal to or greater than  128 and less than 224
--       Tokenize functions have an ID number equal to or greater than  64 and less than 96
--       Phrase functions have an ID number equal to or greater than  96 and less than 128
--       Functions that are being considered for deletion have an ID number equal to or greater than  234 and less than 256
