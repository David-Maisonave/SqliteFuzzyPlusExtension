select Phrases
, Similar(Phrases, 'This is a similar phrase test', 'UseDefaultStringMatchingAlgorithm') as a0 -- UseDefaultStringMatchingAlgorithm (ID# 0)
, Similar(Phrases, 'This is a similar phrase test', 'Levenshtein') as a1 -- Levenshtein (ID# 1)
, Similar(Phrases, 'This is a similar phrase test', 'DamerauLevenshtein') as a2 -- DamerauLevenshtein (ID# 2)
, Similar(Phrases, 'This is a similar phrase test', 'JaroWinkler') as a3 -- JaroWinkler (ID# 3)
, Similar(Phrases, 'This is a similar phrase test', 'HammingDistance') as a4 -- HammingDistance (ID# 4)   *** Note: The Hamming algorithm only works with strings having equal length ***
, Similar(Phrases, 'This is a similar phrase test', 'JaroDistance') as a5 -- JaroDistance (ID# 5)
, Similar(Phrases, 'This is a similar phrase test', 'NormalizedLevenshteinDistance') as a6 -- NormalizedLevenshteinDistance (ID# 6)
, Similar(Phrases, 'This is a similar phrase test', 'Levenshtein2Distance') as a7 -- Levenshtein2Distance (ID# 7)
, Similar(Phrases, 'This is a similar phrase test', 'ChapmanLengthDeviation') as a8 -- ChapmanLengthDeviation (ID# 8)
, Similar(Phrases, 'This is a similar phrase test', 'EuclideanDistance') as a9 -- EuclideanDistance (ID# 9)
, Similar(Phrases, 'This is a similar phrase test', 'LongestCommonSequence') as a32 -- LongestCommonSequence (ID# 32)
, Similar(Phrases, 'This is a similar phrase test', 'NeedlemanWunsch') as a33 -- NeedlemanWunsch (ID# 33)
, Similar(Phrases, 'This is a similar phrase test', 'RatcliffObershelpSimilarityDistance') as a34 -- RatcliffObershelpSimilarityDistance (ID# 34)
, Similar(Phrases, 'This is a similar phrase test', 'LongestCommonSubstringDistance') as a35 -- LongestCommonSubstringDistance (ID# 35)
, Similar(Phrases, 'This is a similar phrase test', 'LongestCommonSubsequenceDistance') as a36 -- LongestCommonSubsequenceDistance (ID# 36)
, Similar(Phrases, 'This is a similar phrase test', 'SmithWaterman') as a37 -- SmithWaterman (ID# 37)
, Similar(Phrases, 'This is a similar phrase test', 'SmithWatermanGotoh') as a38 -- SmithWatermanGotoh (ID# 38)
, Similar(Phrases, 'This is a similar phrase test', 'SmithWatermanGotohWindowedAffine') as a39 -- SmithWatermanGotohWindowedAffine (ID# 39)
, Similar(Phrases, 'This is a similar phrase test', 'CosineSimilarity') as a64 -- CosineSimilarity (ID# 64)
, Similar(Phrases, 'This is a similar phrase test', 'JaccardSimilarity') as a65 -- JaccardSimilarity (ID# 65)
, Similar(Phrases, 'This is a similar phrase test', 'JaccardIndex') as a66 -- JaccardIndex (ID# 66)
, Similar(Phrases, 'This is a similar phrase test', 'TanimotoCoefficientDistance') as a67 -- TanimotoCoefficientDistance (ID# 67)
, Similar(Phrases, 'This is a similar phrase test', 'OverlapCoefficient') as a68 -- OverlapCoefficient (ID# 68)
, Similar(Phrases, 'This is a similar phrase test', 'SorensenDiceDistance') as a69 -- SorensenDiceDistance (ID# 69)
, Similar(Phrases, 'This is a similar phrase test', 'DiceSimilarity') as a70 -- DiceSimilarity (ID# 70)
, Similar(Phrases, 'This is a similar phrase test', 'BlockDistance') as a71 -- BlockDistance (ID# 71)
, Similar(Phrases, 'This is a similar phrase test', 'MatchingCoefficient') as a72 -- MatchingCoefficient (ID# 72)
, Similar(Phrases, 'This is a similar phrase test', 'QGramsDistance') as a73 -- QGramsDistance (ID# 73)
, Similar(Phrases, 'This is a similar phrase test', 'NGramsDistance') as a74 -- NGramsDistance (ID# 74)
, Similar(Phrases, 'This is a similar phrase test', 'MongeElkan') as a96 -- MongeElkan (ID# 96)
, Similar(Phrases, 'This is a similar phrase test', 'Sift4') as a97 -- Sift4 (ID# 97)
, Similar(Phrases, 'This is a similar phrase test', 'SimHash') as a128 -- SimHash (ID# 128)
, Similar(Phrases, 'This is a similar phrase test', 'PhraseTokenize') as a416 -- PhraseTokenize (ID# 416)
, Similar(Phrases, 'This is a similar phrase test', 'SimplePhraseTokenize') as a417 -- SimplePhraseTokenize (ID# 417)
, Similar(Phrases, 'This is a similar phrase test', 'Fuzzy_Damlev') as a448 -- Fuzzy_Damlev (ID# 448)
, Similar(Phrases, 'This is a similar phrase test', 'Fuzzy_Hamming') as a449 -- Fuzzy_Hamming (ID# 449)   *** Note: The Hamming algorithm only works with strings having equal length ***
, Similar(Phrases, 'This is a similar phrase test', 'Fuzzy_Jarowin') as a450 -- Fuzzy_Jarowin (ID# 450)
, Similar(Phrases, 'This is a similar phrase test', 'Fuzzy_Leven') as a451 -- Fuzzy_Leven (ID# 451)
, Similar(Phrases, 'This is a similar phrase test', 'Fuzzy_Osadist') as a452 -- Fuzzy_Osadist (ID# 452)
, Similar(Phrases, 'This is a similar phrase test', 'Fuzzy_Editdist') as a453 -- Fuzzy_Editdist (ID# 453)
, Similar(Phrases, 'This is a similar phrase test', 'Fuzzy_Jaro') as a454 -- Fuzzy_Jaro (ID# 454)
, Similar(Phrases, 'This is a similar phrase test', 'EdlibDistance') as a455 -- EdlibDistance (ID# 455)
, Similar(Phrases, 'This is a similar phrase test', 'ChapmanMeanLength') as a480 -- ChapmanMeanLength (ID# 480)   !!! Warning: The ChapmanMeanLength algorithm does not work. It does NOT produce expected results!!!
, Similar(Phrases, 'This is a similar phrase test', 'EditDistance') as a496 -- EditDistance (ID# 496)
, Similar(Phrases, 'This is a similar phrase test', 'ExactMatch') as a511 -- ExactMatch (ID# 511)
, Similar(Phrases, 'This is a similar phrase test', 'iLevenshtein') as a513 -- iLevenshtein (ID# 513)
, Similar(Phrases, 'This is a similar phrase test', 'iDamerauLevenshtein') as a514 -- iDamerauLevenshtein (ID# 514)
, Similar(Phrases, 'This is a similar phrase test', 'iJaroWinkler') as a515 -- iJaroWinkler (ID# 515)
, Similar(Phrases, 'This is a similar phrase test', 'iHammingDistance') as a516 -- iHammingDistance (ID# 516)   *** Note: The Hamming algorithm only works with strings having equal length ***
, Similar(Phrases, 'This is a similar phrase test', 'iJaroDistance') as a517 -- iJaroDistance (ID# 517)
, Similar(Phrases, 'This is a similar phrase test', 'iNormalizedLevenshteinDistance') as a518 -- iNormalizedLevenshteinDistance (ID# 518)
, Similar(Phrases, 'This is a similar phrase test', 'iLevenshtein2Distance') as a519 -- iLevenshtein2Distance (ID# 519)
, Similar(Phrases, 'This is a similar phrase test', 'iChapmanLengthDeviation') as a520 -- iChapmanLengthDeviation (ID# 520)
, Similar(Phrases, 'This is a similar phrase test', 'iEuclideanDistance') as a521 -- iEuclideanDistance (ID# 521)
, Similar(Phrases, 'This is a similar phrase test', 'iLongestCommonSequence') as a544 -- iLongestCommonSequence (ID# 544)
, Similar(Phrases, 'This is a similar phrase test', 'iNeedlemanWunsch') as a545 -- iNeedlemanWunsch (ID# 545)
, Similar(Phrases, 'This is a similar phrase test', 'iRatcliffObershelpSimilarityDistance') as a546 -- iRatcliffObershelpSimilarityDistance (ID# 546)
, Similar(Phrases, 'This is a similar phrase test', 'iLongestCommonSubstringDistance') as a547 -- iLongestCommonSubstringDistance (ID# 547)
, Similar(Phrases, 'This is a similar phrase test', 'iLongestCommonSubsequenceDistance') as a548 -- iLongestCommonSubsequenceDistance (ID# 548)
, Similar(Phrases, 'This is a similar phrase test', 'iSmithWaterman') as a549 -- iSmithWaterman (ID# 549)
, Similar(Phrases, 'This is a similar phrase test', 'iSmithWatermanGotoh') as a550 -- iSmithWatermanGotoh (ID# 550)
, Similar(Phrases, 'This is a similar phrase test', 'iSmithWatermanGotohWindowedAffine') as a551 -- iSmithWatermanGotohWindowedAffine (ID# 551)
, Similar(Phrases, 'This is a similar phrase test', 'iCosineSimilarity') as a576 -- iCosineSimilarity (ID# 576)
, Similar(Phrases, 'This is a similar phrase test', 'iJaccardSimilarity') as a577 -- iJaccardSimilarity (ID# 577)
, Similar(Phrases, 'This is a similar phrase test', 'iJaccardIndex') as a578 -- iJaccardIndex (ID# 578)
, Similar(Phrases, 'This is a similar phrase test', 'iTanimotoCoefficientDistance') as a579 -- iTanimotoCoefficientDistance (ID# 579)
, Similar(Phrases, 'This is a similar phrase test', 'iOverlapCoefficient') as a580 -- iOverlapCoefficient (ID# 580)
, Similar(Phrases, 'This is a similar phrase test', 'iSorensenDiceDistance') as a581 -- iSorensenDiceDistance (ID# 581)
, Similar(Phrases, 'This is a similar phrase test', 'iDiceSimilarity') as a582 -- iDiceSimilarity (ID# 582)
, Similar(Phrases, 'This is a similar phrase test', 'iBlockDistance') as a583 -- iBlockDistance (ID# 583)
, Similar(Phrases, 'This is a similar phrase test', 'iMatchingCoefficient') as a584 -- iMatchingCoefficient (ID# 584)
, Similar(Phrases, 'This is a similar phrase test', 'iQGramsDistance') as a585 -- iQGramsDistance (ID# 585)
, Similar(Phrases, 'This is a similar phrase test', 'iNGramsDistance') as a586 -- iNGramsDistance (ID# 586)
, Similar(Phrases, 'This is a similar phrase test', 'iMongeElkan') as a608 -- iMongeElkan (ID# 608)
, Similar(Phrases, 'This is a similar phrase test', 'iSift4') as a609 -- iSift4 (ID# 609)
, Similar(Phrases, 'This is a similar phrase test', 'iSimHash') as a640 -- iSimHash (ID# 640)
, Similar(Phrases, 'This is a similar phrase test', 'iChapmanMeanLength') as a992 -- iChapmanMeanLength (ID# 992)   !!! Warning: The ChapmanMeanLength algorithm does not work. It does NOT produce expected results!!!
FROM SimilarPhrase;
-- Note: Case insensitive functions have an ID number greater than 512
--       C++ functions have an ID number equal to or greater than  448 and less than 480
--       Tokenize functions have an ID number equal to or greater than  64 and less than 416
--       Phrase functions have an ID number equal to or greater than  416 and less than 448
--       Functions that are being considered for deletion have an ID number equal to or greater than  496 and less than 512
