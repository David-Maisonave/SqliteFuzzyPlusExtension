select Name
, Distance(Name, 'David Jorge', 0) as a0 -- UseDefaultDistanceMethod (ID# 0)
, Distance(Name, 'David Jorge', 1) as a1 -- Levenshtein (ID# 1)
, Distance(Name, 'David Jorge', 2) as a2 -- DamerauLevenshtein (ID# 2)
, Distance(Name, 'David Jorge', 3) as a3 -- JaroWinkler (ID# 3)
, Distance(Name, 'David Jorge', 4) as a4 -- LongestCommonSequence (ID# 4)
, Distance(Name, 'David Jorge', 5) as a5 -- JaccardIndex (ID# 5)
, Distance(Name, 'David Jorge', 6) as a6 -- OverlapCoefficient (ID# 6)
, Distance(Name, 'David Jorge', 7) as a7 -- NeedlemanWunsch (ID# 7)
, Distance(Name, 'David Jorge', 8) as a8 -- SorensenDiceDistance (ID# 8)
, Distance(Name, 'David Jorge', 9) as a9 -- RatcliffObershelpSimilarityDistance (ID# 9)
, Distance(Name, 'David Jorge', 10) as a10 -- HammingDistance (ID# 10)
, Distance(Name, 'David Jorge', 11) as a11 -- LongestCommonSubstringDistance (ID# 11)
, Distance(Name, 'David Jorge', 12) as a12 -- LongestCommonSubsequenceDistance (ID# 12)
, Distance(Name, 'David Jorge', 13) as a13 -- JaroDistance (ID# 13)
, Distance(Name, 'David Jorge', 14) as a14 -- NormalizedLevenshteinDistance (ID# 14)
, Distance(Name, 'David Jorge', 15) as a15 -- Levenshtein2Distance (ID# 15)
, Distance(Name, 'David Jorge', 16) as a16 -- TanimotoCoefficientDistance (ID# 16)
, Distance(Name, 'David Jorge', 17) as a17 -- BlockDistance (ID# 17)
, Distance(Name, 'David Jorge', 18) as a18 -- ChapmanLengthDeviation (ID# 18)
, Distance(Name, 'David Jorge', 19) as a19 -- ChapmanMeanLength (ID# 19)
, Distance(Name, 'David Jorge', 20) as a20 -- EuclideanDistance (ID# 20)
, Distance(Name, 'David Jorge', 21) as a21 -- MatchingCoefficient (ID# 21)
, Distance(Name, 'David Jorge', 22) as a22 -- MongeElkan (ID# 22)
, Distance(Name, 'David Jorge', 23) as a23 -- QGramsDistance (ID# 23)
, Distance(Name, 'David Jorge', 24) as a24 -- SmithWaterman (ID# 24)
, Distance(Name, 'David Jorge', 25) as a25 -- SmithWatermanGotoh (ID# 25)
, Distance(Name, 'David Jorge', 26) as a26 -- SmithWatermanGotohWindowedAffine (ID# 26)
, Distance(Name, 'David Jorge', 27) as a27 -- DiceSimilarity (ID# 27)
, Distance(Name, 'David Jorge', 64) as a64 -- CosineSimilarity (ID# 64)
, Distance(Name, 'David Jorge', 65) as a65 -- JaccardSimilarity (ID# 65)
, Distance(Name, 'David Jorge', 96) as a96 -- PhraseTokenize (ID# 96)
, Distance(Name, 'David Jorge', 97) as a97 -- SimplePhraseTokenize (ID# 97)
, Distance(Name, 'David Jorge', 112) as a112 -- EditDistance (ID# 112)
, Distance(Name, 'David Jorge', 128) as a128 -- Fuzzy_Damlev (ID# 128)
, Distance(Name, 'David Jorge', 129) as a129 -- Fuzzy_Hamming (ID# 129)
, Distance(Name, 'David Jorge', 130) as a130 -- Fuzzy_Jarowin (ID# 130)
, Distance(Name, 'David Jorge', 131) as a131 -- Fuzzy_Leven (ID# 131)
, Distance(Name, 'David Jorge', 132) as a132 -- Fuzzy_Osadist (ID# 132)
, Distance(Name, 'David Jorge', 133) as a133 -- Fuzzy_Editdist (ID# 133)
, Distance(Name, 'David Jorge', 134) as a134 -- Fuzzy_Jaro (ID# 134)
, Distance(Name, 'David Jorge', 135) as a135 -- SameSound_StrCmp (ID# 135)
, Distance(Name, 'David Jorge', 136) as a136 -- EdlibDistance (ID# 136)
, Distance(Name, 'David Jorge', 257) as a257 -- iLevenshtein (ID# 257)
, Distance(Name, 'David Jorge', 258) as a258 -- iDamerauLevenshtein (ID# 258)
, Distance(Name, 'David Jorge', 259) as a259 -- iJaroWinkler (ID# 259)
, Distance(Name, 'David Jorge', 260) as a260 -- iLongestCommonSequence (ID# 260)
, Distance(Name, 'David Jorge', 261) as a261 -- iJaccardIndex (ID# 261)
, Distance(Name, 'David Jorge', 262) as a262 -- iOverlapCoefficient (ID# 262)
, Distance(Name, 'David Jorge', 263) as a263 -- iNeedlemanWunsch (ID# 263)
, Distance(Name, 'David Jorge', 264) as a264 -- iSorensenDiceDistance (ID# 264)
, Distance(Name, 'David Jorge', 265) as a265 -- iRatcliffObershelpSimilarityDistance (ID# 265)
, Distance(Name, 'David Jorge', 266) as a266 -- iHammingDistance (ID# 266)
, Distance(Name, 'David Jorge', 267) as a267 -- iLongestCommonSubstringDistance (ID# 267)
, Distance(Name, 'David Jorge', 268) as a268 -- iLongestCommonSubsequenceDistance (ID# 268)
, Distance(Name, 'David Jorge', 269) as a269 -- iJaroDistance (ID# 269)
, Distance(Name, 'David Jorge', 270) as a270 -- iNormalizedLevenshteinDistance (ID# 270)
, Distance(Name, 'David Jorge', 271) as a271 -- iLevenshtein2Distance (ID# 271)
, Distance(Name, 'David Jorge', 272) as a272 -- iTanimotoCoefficientDistance (ID# 272)
, Distance(Name, 'David Jorge', 273) as a273 -- iEditDistance (ID# 273)
, Distance(Name, 'David Jorge', 274) as a274 -- iCosineSimilarity (ID# 274)
, Distance(Name, 'David Jorge', 275) as a275 -- iJaccardSimilarity (ID# 275)
, Distance(Name, 'David Jorge', 276) as a276 -- iBlockDistance (ID# 276)
, Distance(Name, 'David Jorge', 277) as a277 -- iChapmanLengthDeviation (ID# 277)
, Distance(Name, 'David Jorge', 278) as a278 -- iChapmanMeanLength (ID# 278)
, Distance(Name, 'David Jorge', 279) as a279 -- iEuclideanDistance (ID# 279)
, Distance(Name, 'David Jorge', 280) as a280 -- iMatchingCoefficient (ID# 280)
, Distance(Name, 'David Jorge', 281) as a281 -- iMongeElkan (ID# 281)
, Distance(Name, 'David Jorge', 282) as a282 -- iQGramsDistance (ID# 282)
, Distance(Name, 'David Jorge', 283) as a283 -- iSmithWaterman (ID# 283)
, Distance(Name, 'David Jorge', 284) as a284 -- iSmithWatermanGotoh (ID# 284)
, Distance(Name, 'David Jorge', 285) as a285 -- iSmithWatermanGotohWindowedAffine (ID# 285)
, Distance(Name, 'David Jorge', 286) as a286 -- iDiceSimilarity (ID# 286)
FROM SimilarNames;
-- Note: Case insensitive functions have an ID number greater than 256
--       C++ functions have an ID number equal to or greater than  128 and less than 256
--       Tokenize functions have an ID number equal to or greater than  64 and less than 96
--       Phrase functions have an ID number equal to or greater than  96 and less than 112
--       Functions that are being considered for deletion have an ID number equal to or greater than  112 and less than 128
